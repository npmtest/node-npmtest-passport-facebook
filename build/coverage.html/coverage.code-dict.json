{"/home/travis/build/npmtest/node-npmtest-passport-facebook/test.js":"/* istanbul instrument in package npmtest_passport_facebook */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/lib.npmtest_passport_facebook.js":"/* istanbul instrument in package npmtest_passport_facebook */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_passport_facebook = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_passport_facebook = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-passport-facebook && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_passport_facebook */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_passport_facebook\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_passport_facebook.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_passport_facebook.rollup.js'] =\n            local.assetsDict['/assets.npmtest_passport_facebook.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_passport_facebook.__dirname + '/lib.npmtest_passport_facebook.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/index.js":"// Load modules.\nvar Strategy = require('./strategy');\n\n\n// Expose Strategy.\nexports = module.exports = Strategy;\n\n// Exports.\nexports.Strategy = Strategy;\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/strategy.js":"// Load modules.\nvar OAuth2Strategy = require('passport-oauth2')\n  , util = require('util')\n  , uri = require('url')\n  , crypto = require('crypto')\n  , Profile = require('./profile')\n  , InternalOAuthError = require('passport-oauth2').InternalOAuthError\n  , FacebookAuthorizationError = require('./errors/facebookauthorizationerror')\n  , FacebookTokenError = require('./errors/facebooktokenerror')\n  , FacebookGraphAPIError = require('./errors/facebookgraphapierror');\n\n\n/**\n * `Strategy` constructor.\n *\n * The Facebook authentication strategy authenticates requests by delegating to\n * Facebook using the OAuth 2.0 protocol.\n *\n * Applications must supply a `verify` callback which accepts an `accessToken`,\n * `refreshToken` and service-specific `profile`, and then calls the `cb`\n * callback supplying a `user`, which should be set to `false` if the\n * credentials are not valid.  If an exception occured, `err` should be set.\n *\n * Options:\n *   - `clientID`      your Facebook application's App ID\n *   - `clientSecret`  your Facebook application's App Secret\n *   - `callbackURL`   URL to which Facebook will redirect the user after granting authorization\n *\n * Examples:\n *\n *     passport.use(new FacebookStrategy({\n *         clientID: '123-456-789',\n *         clientSecret: 'shhh-its-a-secret'\n *         callbackURL: 'https://www.example.net/auth/facebook/callback'\n *       },\n *       function(accessToken, refreshToken, profile, cb) {\n *         User.findOrCreate(..., function (err, user) {\n *           cb(err, user);\n *         });\n *       }\n *     ));\n *\n * @constructor\n * @param {object} options\n * @param {function} verify\n * @access public\n */\nfunction Strategy(options, verify) {\n  options = options || {};\n  options.authorizationURL = options.authorizationURL || 'https://www.facebook.com/dialog/oauth';\n  options.tokenURL = options.tokenURL || 'https://graph.facebook.com/oauth/access_token';\n  options.scopeSeparator = options.scopeSeparator || ',';\n\n  OAuth2Strategy.call(this, options, verify);\n  this.name = 'facebook';\n  this._profileURL = options.profileURL || 'https://graph.facebook.com/v2.5/me';\n  this._profileFields = options.profileFields || null;\n  this._enableProof = options.enableProof;\n  this._clientSecret = options.clientSecret;\n}\n\n// Inherit from `OAuth2Strategy`.\nutil.inherits(Strategy, OAuth2Strategy);\n\n\n/**\n * Authenticate request by delegating to Facebook using OAuth 2.0.\n *\n * @param {http.IncomingMessage} req\n * @param {object} options\n * @access protected\n */\nStrategy.prototype.authenticate = function(req, options) {\n  // Facebook doesn't conform to the OAuth 2.0 specification, with respect to\n  // redirecting with error codes.\n  //\n  //   FIX: https://github.com/jaredhanson/passport-oauth/issues/16\n  if (req.query && req.query.error_code && !req.query.error) {\n    return this.error(new FacebookAuthorizationError(req.query.error_message, parseInt(req.query.error_code, 10)));\n  }\n\n  OAuth2Strategy.prototype.authenticate.call(this, req, options);\n};\n\n/**\n * Return extra Facebook-specific parameters to be included in the authorization\n * request.\n *\n * Options:\n *  - `display`  Display mode to render dialog, { `page`, `popup`, `touch` }.\n *\n * @param {object} options\n * @return {object}\n * @access protected\n */\nStrategy.prototype.authorizationParams = function (options) {\n  var params = {};\n\n  // https://developers.facebook.com/docs/reference/dialogs/oauth/\n  if (options.display) {\n    params.display = options.display;\n  }\n  \n  // https://developers.facebook.com/docs/facebook-login/reauthentication/\n  if (options.authType) {\n    params.auth_type = options.authType;\n  }\n  if (options.authNonce) {\n    params.auth_nonce = options.authNonce;\n  }\n\n  return params;\n};\n\n/**\n * Retrieve user profile from Facebook.\n *\n * This function constructs a normalized profile, with the following properties:\n *\n *   - `provider`         always set to `facebook`\n *   - `id`               the user's Facebook ID\n *   - `username`         the user's Facebook username\n *   - `displayName`      the user's full name\n *   - `name.familyName`  the user's last name\n *   - `name.givenName`   the user's first name\n *   - `name.middleName`  the user's middle name\n *   - `gender`           the user's gender: `male` or `female`\n *   - `profileUrl`       the URL of the profile for the user on Facebook\n *   - `emails`           the proxied or contact email address granted by the user\n *\n * @param {string} accessToken\n * @param {function} done\n * @access protected\n */\nStrategy.prototype.userProfile = function(accessToken, done) {\n  var url = uri.parse(this._profileURL);\n  if (this._enableProof) {\n    // Secure API call by adding proof of the app secret.  This is required when\n    // the \"Require AppSecret Proof for Server API calls\" setting has been\n    // enabled.  The proof is a SHA256 hash of the access token, using the app\n    // secret as the key.\n    //\n    // For further details, refer to:\n    // https://developers.facebook.com/docs/reference/api/securing-graph-api/    \n    var proof = crypto.createHmac('sha256', this._clientSecret).update(accessToken).digest('hex');\n    url.search = (url.search ? url.search + '&' : '') + 'appsecret_proof=' + proof;\n  }\n  if (this._profileFields) {\n    var fields = this._convertProfileFields(this._profileFields);\n    if (fields !== '') { url.search = (url.search ? url.search + '&' : '') + 'fields=' + fields; }\n  }\n  url = uri.format(url);\n\n  this._oauth2.get(url, accessToken, function (err, body, res) {\n    var json;\n    \n    if (err) {\n      if (err.data) {\n        try {\n          json = JSON.parse(err.data);\n        } catch (_) {}\n      }\n      \n      if (json && json.error && typeof json.error == 'object') {\n        return done(new FacebookGraphAPIError(json.error.message, json.error.type, json.error.code, json.error.error_subcode, json.error.fbtrace_id));\n      }\n      return done(new InternalOAuthError('Failed to fetch user profile', err));\n    }\n    \n    try {\n      json = JSON.parse(body);\n    } catch (ex) {\n      return done(new Error('Failed to parse user profile'));\n    }\n\n    var profile = Profile.parse(json);\n    profile.provider = 'facebook';\n    profile._raw = body;\n    profile._json = json;\n\n    done(null, profile);\n  });\n};\n\n/**\n * Parse error response from Facebook OAuth 2.0 token endpoint.\n *\n * @param {string} body\n * @param {number} status\n * @return {Error}\n * @access protected\n */\nStrategy.prototype.parseErrorResponse = function(body, status) {\n  var json = JSON.parse(body);\n  if (json.error && typeof json.error == 'object') {\n    return new FacebookTokenError(json.error.message, json.error.type, json.error.code, json.error.error_subcode, json.error.fbtrace_id);\n  }\n  return OAuth2Strategy.prototype.parseErrorResponse.call(this, body, status);\n};\n\n/**\n * Convert Facebook profile to a normalized profile.\n *\n * @param {object} profileFields\n * @return {string}\n * @access protected\n */\nStrategy.prototype._convertProfileFields = function(profileFields) {\n  var map = {\n    'id':          'id',\n    'username':    'username',\n    'displayName': 'name',\n    'name':       ['last_name', 'first_name', 'middle_name'],\n    'gender':      'gender',\n    'birthday':    'birthday',\n    'profileUrl':  'link',\n    'emails':      'email',\n    'photos':      'picture'\n  };\n  \n  var fields = [];\n  \n  profileFields.forEach(function(f) {\n    // return raw Facebook profile field to support the many fields that don't\n    // map cleanly to Portable Contacts\n    if (typeof map[f] === 'undefined') { return fields.push(f); };\n\n    if (Array.isArray(map[f])) {\n      Array.prototype.push.apply(fields, map[f]);\n    } else {\n      fields.push(map[f]);\n    }\n  });\n\n  return fields.join(',');\n};\n\n\n// Expose constructor.\nmodule.exports = Strategy;\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/profile.js":"/**\n * Parse profile.\n *\n * @param {object|string} json\n * @return {object}\n * @access public\n */\nexports.parse = function(json) {\n  if ('string' == typeof json) {\n    json = JSON.parse(json);\n  }\n  \n  var profile = {};\n  profile.id = json.id;\n  profile.username = json.username;\n  profile.displayName = json.name;\n  profile.name = { familyName: json.last_name,\n                   givenName: json.first_name,\n                   middleName: json.middle_name };\n\n  profile.gender = json.gender;\n  profile.profileUrl = json.link;\n  \n  if (json.email) {\n    profile.emails = [{ value: json.email }];\n  }\n  \n  if (json.picture) {\n    if (typeof json.picture == 'object' && json.picture.data) {\n      // October 2012 Breaking Changes\n      profile.photos = [{ value: json.picture.data.url }];\n    } else {\n      profile.photos = [{ value: json.picture }];\n    }\n  }\n  \n  return profile;\n};\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/errors/facebookauthorizationerror.js":"/**\n * `FacebookAuthorizationError` error.\n *\n * FacebookAuthorizationError represents an error in response to an\n * authorization request on Facebook.  Note that these responses don't conform\n * to the OAuth 2.0 specification.\n *\n * References:\n *   - https://developers.facebook.com/docs/reference/api/errors/\n *\n * @constructor\n * @param {string} [message]\n * @param {number} [code]\n * @access public\n */\nfunction FacebookAuthorizationError(message, code) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'FacebookAuthorizationError';\n  this.message = message;\n  this.code = code;\n  this.status = 500;\n}\n\n// Inherit from `Error`.\nFacebookAuthorizationError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = FacebookAuthorizationError;\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/errors/facebooktokenerror.js":"/**\n * `FacebookTokenError` error.\n *\n * FacebookTokenError represents an error received from a Facebook's token\n * endpoint.  Note that these responses don't conform to the OAuth 2.0\n * specification.\n *\n * References:\n *   - https://developers.facebook.com/docs/reference/api/errors/\n *\n * @constructor\n * @param {string} [message]\n * @param {string} [type]\n * @param {number} [code]\n * @param {number} [subcode]\n * @param {string} [traceID]\n * @access public\n */\nfunction FacebookTokenError(message, type, code, subcode, traceID) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'FacebookTokenError';\n  this.message = message;\n  this.type = type;\n  this.code = code;\n  this.subcode = subcode;\n  this.traceID = traceID;\n  this.status = 500;\n}\n\n// Inherit from `Error`.\nFacebookTokenError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = FacebookTokenError;\n","/home/travis/build/npmtest/node-npmtest-passport-facebook/node_modules/passport-facebook/lib/errors/facebookgraphapierror.js":"/**\n * `FacebookGraphAPIError` error.\n *\n * References:\n *   - https://developers.facebook.com/docs/reference/api/errors/\n *\n * @constructor\n * @param {string} [message]\n * @param {string} [type]\n * @param {number} [code]\n * @param {number} [subcode]\n * @param {string} [traceID]\n * @access public\n */\nfunction FacebookGraphAPIError(message, type, code, subcode, traceID) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'FacebookGraphAPIError';\n  this.message = message;\n  this.type = type;\n  this.code = code;\n  this.subcode = subcode;\n  this.traceID = traceID;\n  this.status = 500;\n}\n\n// Inherit from `Error`.\nFacebookGraphAPIError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = FacebookGraphAPIError;\n"}